id: https://github.com/crs4/rocrate-validator/profiles/workflow-ro-crate-linkml
name: workflow_ro_crate
prefixes:
  linkml: https://w3id.org/linkml/
  schema: http://schema.org/
  ORCID: https://orcid.org/
  bioschemas: https://bioschemas.org/
  roterms: http://purl.org/ro/roterms#
  rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns#
  sh: http://www.w3.org/ns/shacl#
  ro-crate: https://github.com/crs4/rocrate-validator/profiles/ro-crate/
  workflow-ro-crate: https://github.com/crs4/rocrate-validator/profiles/workflow-ro-crate/
  workflow-ro-crate-linkml: https://github.com/crs4/rocrate-validator/profiles/workflow-ro-crate-linkml/
imports:
  - linkml:types
default_range: string

classes:
  ## --
  ## New parent class
  ## --
  # Entity:
  #   abstract: true     ## should not be instantiated directly
  #   slots:
  #    - id
  #    - type
  #   close_mappings:
  #    - schema:Thing

  # basic classes, no validation performed
  WorkflowROCrateRootDataEntity:
    class_uri: ro-crate:RootDataEntity
    mixins:
      - MainEntityPropertyMustExist
      #- ForceFailure

  # validation classes
  MainEntityPropertyMustExist:
    mixin: true
    title: Main Workflow entity existence eyey
    description: >-
      The Main Workflow must be specified through a `mainEntity` property in the root data entity ayay
    slots:
      - main_entity #pattern: "^\.\/$"
    #   - conforms_to
    slot_usage:
      - main_entity:
          description: Check if the Main Workflow is specified through a `mainEntity` property in the root data entity byby
          annotations:
            sh:message: The Main Workflow must be specified through a `mainEntity` property in the root data entity cycy
    #       range: schema:SoftwareSourceCode # update this
    #   - conforms_to:

  # ForceFailure:
  #   mixin: true
  #   title: forces failure dydy
  #   slots:
  #     - fail

  # MainWorkflow:
  #   slots:
  #     - type_workflow
  #     - programming_language

  # Person:
  #   is_a: NamedThing
  #   description: >-
  #     A person....
  #   class_uri: schema:Person
  #   slots:
  #     - primary_email
  #   slot_usage:
  #     primary_email:
  #       pattern: "^\\S+@[\\S+\\.]+\\S+"
  #       recommended: true
  #       annotations:
  #         sh:severity: sh:Warning
  #         sh:name: "Primary Email Validation"
  #         sh:description: "This requirement checks the validity of the primary email address."
  #         sh:message: "The primary email address is not valid."

slots:
  id:
    identifier: true
    required: true
    range: uriorcurie
  type:
    designates_type: true
    required: true
    range: uriorcurie
  name:
    required: true
    slot_uri: schema:name
    range: string
  main_entity:
    required: true
    slot_uri: schema:mainEntity
  fail:
    required: true
    slot_uri: schema:lyrics
