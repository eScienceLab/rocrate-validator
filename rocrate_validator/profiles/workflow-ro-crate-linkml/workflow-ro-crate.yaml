id: https://github.com/crs4/rocrate-validator/profiles/workflow-ro-crate/linkml
name: workflow_ro_crate_linkml
prefixes:
  linkml: https://w3id.org/linkml/
  schema: http://schema.org/
  ORCID: https://orcid.org/
  bioschemas: https://bioschemas.org/
  roterms: http://purl.org/ro/roterms#
  rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns#
  sh: http://www.w3.org/ns/shacl#
  ro: ./
  ro-crate: https://github.com/crs4/rocrate-validator/profiles/ro-crate/
  workflow-ro-crate: https://github.com/crs4/rocrate-validator/profiles/workflow-ro-crate/
imports:
  - linkml:types
default_range: string

classes:
  # validation classes
  WorkflowROCrateMetadataDescriptor:
    title: WROC Metadata File Descriptor properties
    description: Properties of the WROC Metadata File Descriptor
    class_uri: ro:ro-crate-metadata.json # not quite right - it's a target _node_, not a class
    slots:
      - conforms_to
    attributes:
      # for now fairly useless as id doesn't map to IRIs
      id:
        identifier: true
        range: string
    rules:
      # this doesn't work because the id slot doesn't work like this
      # but this is the pattern that could be followed
      - preconditions:
          slot_conditions:
            id:
              equals_string: "ro-crate-metadata.json"
        postconditions:
          slot_conditions:
            conforms_to:
              has_member:
                equals_string: https://w3id.org/workflowhub/workflow-ro-crate/1.0
        description: if the entity is the Metadata Descriptor, it should conform to the WROC spec    
    slot_usage:
      conforms_to:
        title: Metadata File Descriptor conformsTo
        description: "The Metadata File Descriptor conformsTo SHOULD contain https://w3id.org/ro/crate/1.1 and <https://w3id.org/workflowhub/workflow-ro-crate/1.0>"
        minimum_cardinality: 2
        annotations:
          #sh:message: The Metadata File Descriptor conformsTo SHOULD contain https://w3id.org/ro/crate/1.1 and https://w3id.org/workflowhub/workflow-ro-crate/1.0
          sh:message: "The Metadata File Descriptor conformsTo SHOULD contain the Workflow RO-Crate profile"
          sh:severity: sh:Warning


  WorkflowROCrateRootDataEntity:
    title: WROC Root Data Entity Required Properties
    description: Root Data Entity properties defined as MUST
    class_uri: ro-crate:RootDataEntity
    slots:
      - main_entity
      - license

  MainWorkflow:
    class_uri: bioschemas:ComputationalWorkflow
    title: Main Workflow definition
    description: Main Workflow properties
    # mixins: # this does not work as a way to check if the workflow has multiple classes
    #   - File
    #   - SoftwareSourceCode
    #   - ComputationalWorkflow
    slots:
      - programming_language
      - conforms_to
      # - main_workflow_types
    slot_usage:
      conforms_to:
        title: Main Workflow Bioschemas compliance
        description: The Main Workflow SHOULD comply with Bioschemas ComputationalWorkflow profile version 1.0 or later ;
        # has_member: # currently not supported in SHACL generator
        pattern: "https://bioschemas.org/profiles/ComputationalWorkflow/[1-9].*"
        required: true
        annotations:
          sh:message: The Main Workflow SHOULD comply with Bioschemas ComputationalWorkflow profile version 1.0 or later
          sh:severity: sh:Warning

  Readme:
    class_uri: schema:CreativeWork
    title: README properties
    description: README file for the Workflow RO-Crate
    slots:
      - about
      - encoding_format
    # TODO: add rule to only apply the following slot conditions
    #       if @id is README.md
    slot_usage:
      about:
        title: README.md about
        description: The README.md SHOULD be about the crate
        range: WorkflowROCrateRootDataEntity
        required: true
        annotations:
          sh:message: The README.md SHOULD be about the crate
          sh:severity: sh:Warning
      encoding_format:
        title: README.md encodingFormat
        description: The README.md SHOULD have text/markdown as its encodingFormat
        equals_string: "text/markdown"
        required: true
        annotations:
          sh:message: The README.md SHOULD have text/markdown as its encodingFormat
          sh:severity: sh:Warning

  # classes representing schema.org types
  File:
    class_uri: schema:MediaObject
  SoftwareSourceCode:
    class_uri: schema:SoftwareSourceCode
  ComputationalWorkflow:
    class_uri: bioschemas:ComputationalWorkflow
  ComputerLanguage:
    class_uri: schema:ComputerLanguage
  CreativeWork:
    class_uri: schema:CreativeWork


# individual property requirements
slots:
  # MUST
  main_entity:
    required: true
    slot_uri: schema:mainEntity
    range: CreativeWork
    title: Main Workflow entity existence
    description: Check if the Main Workflow is specified through a `mainEntity` property in the root data entity
    annotations:
     sh:message: The Main Workflow must be specified through a `mainEntity` property in the root data entity
     sh:severity: sh:Violation
  license:
    required: true
    slot_uri: schema:license
    title: Crate license
    description: The Crate must specify a license
    annotations:
      sh:message: The Crate (Root Data Entity) must specify a license, which should be a URL but can also be a string
      sh:severity: sh:Violation
    any_of:
      - range: CreativeWork # TODO: make this map to just sh:IRI, via objectidentifier or similar?
      - range: string
      - range: objectidentifier
  programming_language:
    required: true
    slot_uri: schema:programmingLanguage
    range: ComputerLanguage
    title: Main Workflow language
    description: The Main Workflow must refer to its language via programmingLanguage
    annotations:
     sh:message: The Main Workflow must refer to its language via programmingLanguage
     sh:severity: sh:Violation
  main_workflow_types:
    # slot doesn't work - awaiting help in Slack
    # (1) unclear how to test for multiple types
    # (2) minimum_cardinality doesn't work https://github.com/linkml/linkml/issues/2429
    # required: true
    # slot_uri: rdf:type
    # range: uriorcurie
    # type_mappings:
    #   - framework_key: shacl
    #     mapped_type: bioschemas:ComputationalWorkflow
    title: Main Workflow type
    description: The Main Workflow must have types File, SoftwareSourceCode, ComputationalWorkflow
    multivalued: true
    annotations:
     sh:message: The Main Workflow must have types File, SoftwareSourceCode, ComputationalWorkflow
     sh:severity: sh:Violation
  # SHOULD
  # generic conformsTo slot - would be on base profile if we had one in LinkML
  conforms_to:
    slot_uri: schema:conformsTo
    title: Conforms To
    multivalued: true
    # any_of:
    #   - range: uriorcurie
    range: CreativeWork
  about:
    slot_uri: schema:about
    title: About
    multivalued: true
    range: uriorcurie
  encoding_format:
    slot_uri: schema:encodingFormat
    title: Encoding Format
    description: The encoding format of a document
    #any_of:
    range: string
      # - range: uriorcurie
      # - range: objectidentifier
    multivalued: true
